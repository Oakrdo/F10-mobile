-- ESP para Esferas do Drag√£o - Dragon Ball Rage
-- Por: DeepSeek-R1

wait(2)

-- Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- Vari√°veis
local player = Players.LocalPlayer
local IS_ESP_ACTIVE = false
local dragonBalls = {}
local espHandles = {}
local currentTPIndex = 1

-- Criar GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DragonBallESP"
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false

-- Frame principal
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0.4, 0, 0.25, 0)
mainFrame.Position = UDim2.new(0.05, 0, 0.1, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 30, 30)
mainFrame.BackgroundTransparency = 0.2
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- T√≠tulo
local title = Instance.new("TextLabel")
title.Text = "üåü ESP ESFERAS DO DRAG√ÉO"
title.Size = UDim2.new(1, 0, 0.2, 0)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.new(1, 1, 1)
title.TextScaled = true
title.Font = Enum.Font.SourceSansBold
title.Parent = mainFrame

-- Status
local statusLabel = Instance.new("TextLabel")
statusLabel.Text = "üî¥ ESP DESLIGADO"
statusLabel.Size = UDim2.new(1, 0, 0.2, 0)
statusLabel.Position = UDim2.new(0, 0, 0.2, 0)
statusLabel.BackgroundTransparency = 1
statusLabel.TextColor3 = Color3.new(1, 0.5, 0.5)
statusLabel.TextScaled = true
statusLabel.Parent = mainFrame

-- Info
local infoLabel = Instance.new("TextLabel")
infoLabel.Text = "Esferas: 0 | TP: 0/0"
infoLabel.Size = UDim2.new(1, 0, 0.2, 0)
infoLabel.Position = UDim2.new(0, 0, 0.4, 0)
infoLabel.BackgroundTransparency = 1
infoLabel.TextColor3 = Color3.new(0.8, 0.8, 1)
infoLabel.TextScaled = true
infoLabel.Parent = mainFrame

-- Bot√µes
local buttonFrame = Instance.new("Frame")
buttonFrame.Size = UDim2.new(1, 0, 0.4, 0)
buttonFrame.Position = UDim2.new(0, 0, 0.6, 0)
buttonFrame.BackgroundTransparency = 1
buttonFrame.Parent = mainFrame

-- Bot√£o ESP
local espButton = Instance.new("TextButton")
espButton.Text = "üåü LIGAR ESP"
espButton.Size = UDim2.new(0.48, 0, 0.9, 0)
espButton.Position = UDim2.new(0.01, 0, 0.05, 0)
espButton.BackgroundColor3 = Color3.fromRGB(180, 80, 180)
espButton.TextColor3 = Color3.new(1, 1, 1)
espButton.TextScaled = true
espButton.Parent = buttonFrame

-- Bot√£o TP para Esfera
local tpButton = Instance.new("TextButton")
tpButton.Text = "üöÄ TP PR√ìXIMA"
tpButton.Size = UDim2.new(0.48, 0, 0.9, 0)
tpButton.Position = UDim2.new(0.51, 0, 0.05, 0)
tpButton.BackgroundColor3 = Color3.fromRGB(80, 180, 80)
tpButton.TextColor3 = Color3.new(1, 1, 1)
tpButton.TextScaled = true
tpButton.Parent = buttonFrame

-- Fun√ß√£o MELHORADA para verificar se √© uma Esfera do Drag√£o
local function isDragonBall(model)
    local name = tostring(model.Name)
    
    -- Verifica se √© um GUID (come√ßa com { e termina com })
    if string.sub(name, 1, 1) == "{" and string.sub(name, -1) == "}" then
        return true
    end
    
    -- Ignora nomes que sabemos que n√£o s√£o esferas
    local lowerName = string.lower(name)
    if string.find(lowerName, "dragonshop") or 
       string.find(lowerName, "explainer") or 
       string.find(lowerName, "spawn") or
       string.find(lowerName, "giver") or
       string.find(lowerName, "npc") then
        return false
    end
    
    return false
end

-- Fun√ß√£o MELHORADA para criar ESP de uma Esfera do Drag√£o
local function createDragonBallESP(dragonBall)
    if espHandles[dragonBall] then return end
    
    -- Encontrar uma parte para ancorar o ESP
    local rootPart = dragonBall:FindFirstChild("HumanoidRootPart") or 
                    dragonBall:FindFirstChild("Head") or 
                    dragonBall:FindFirstChild("Torso") or 
                    dragonBall:FindFirstChild("Part") or
                    dragonBall:FindFirstChildWhichIsA("Part")
    
    if not rootPart then
        -- Se n√£o encontrar parte espec√≠fica, usa o pr√≥prio modelo
        rootPart = dragonBall
    end
    
    -- BillboardGui para texto flutuante MAIOR
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "DragonBallESP"
    billboard.Adornee = rootPart
    billboard.Size = UDim2.new(0, 400, 0, 100) -- TEXTO MAIOR
    billboard.StudsOffset = Vector3.new(0, 5, 0) -- MAIS ALTO
    billboard.AlwaysOnTop = true
    billboard.MaxDistance = 5000 -- VIS√çVEL DE MUITO LONGE
    billboard.ExtentsOffset = Vector3.new(0, 0, 0)
    billboard.Parent = rootPart
    
    -- Texto da esfera MAIOR
    local textLabel = Instance.new("TextLabel")
    textLabel.Text = "üåü ESFERA DO DRAG√ÉO üåü"
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.new(1, 1, 0) -- Amarelo brilhante
    textLabel.TextStrokeColor3 = Color3.new(0, 0, 0) -- Contorno preto
    textLabel.TextStrokeTransparency = 0 -- Contorno totalmente vis√≠vel
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.TextSize = 50 -- TEXTO GRANDE
    textLabel.Parent = billboard
    
    -- Highlight MAIS BRILHANTE
    local highlight = Instance.new("Highlight")
    highlight.Name = "DragonBallHighlight"
    highlight.Adornee = dragonBall
    highlight.FillColor = Color3.new(1, 1, 0)  -- Amarelo brilhante
    highlight.OutlineColor = Color3.new(1, 0.3, 0)  -- Laranja forte
    highlight.FillTransparency = 0.2 -- MENOS TRANSPARENTE
    highlight.OutlineTransparency = 0
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Parent = dragonBall
    
    -- Part√≠cula de brilho
    local attachment = Instance.new("Attachment")
    attachment.Parent = rootPart
    
    local particleEmitter = Instance.new("ParticleEmitter")
    particleEmitter.Texture = "rbxasset://textures/particles/sparkles_main.dds"
    particleEmitter.Color = ColorSequence.new(Color3.new(1, 1, 0))
    particleEmitter.Size = NumberSequence.new(1, 3)
    particleEmitter.Transparency = NumberSequence.new(0, 1)
    particleEmitter.Lifetime = NumberRange.new(1, 3)
    particleEmitter.Rate = 20
    particleEmitter.SpreadAngle = Vector2.new(45, 45)
    particleEmitter.Parent = attachment
    
    espHandles[dragonBall] = {
        Billboard = billboard,
        Highlight = highlight,
        Particle = particleEmitter,
        Attachment = attachment
    }
    
    print("üåü ESP criado para: " .. dragonBall.Name)
end

-- Fun√ß√£o para remover ESP de uma Esfera
local function removeDragonBallESP(dragonBall)
    if espHandles[dragonBall] then
        if espHandles[dragonBall].Billboard then
            espHandles[dragonBall].Billboard:Destroy()
        end
        if espHandles[dragonBall].Highlight then
            espHandles[dragonBall].Highlight:Destroy()
        end
        if espHandles[dragonBall].Particle then
            espHandles[dragonBall].Particle:Destroy()
        end
        if espHandles[dragonBall].Attachment then
            espHandles[dragonBall].Attachment:Destroy()
        end
        espHandles[dragonBall] = nil
    end
end

-- Fun√ß√£o para limpar todos os ESPs
local function clearAllESP()
    for dragonBall, handles in pairs(espHandles) do
        removeDragonBallESP(dragonBall)
    end
    espHandles = {}
    print("üßπ Todos os ESPs removidos")
end

-- Fun√ß√£o MELHORADA para encontrar Esferas do Drag√£o
local function findDragonBalls()
    dragonBalls = {}
    
    -- Busca ESPEC√çFICA no caminho Map
    local mapFolder = Workspace:FindFirstChild("Map")
    if mapFolder then
        -- Procura por TODOS os modelos no Map
        for _, obj in pairs(mapFolder:GetDescendants()) do
            if obj:IsA("Model") and isDragonBall(obj) then
                local rootPartBall = obj:FindFirstChild("HumanoidRootPart") or 
                                   obj:FindFirstChild("Head") or 
                                   obj:FindFirstChild("Torso") or 
                                   obj:FindFirstChild("Part") or
                                   obj:FindFirstChildWhichIsA("Part")
                
                local position
                if rootPartBall then
                    position = rootPartBall.Position
                else
                    position = obj:GetPivot().Position
                end
                
                table.insert(dragonBalls, {
                    Model = obj,
                    RootPart = rootPartBall or obj,
                    Position = position,
                    Name = obj.Name
                })
            end
        end
    end
    
    -- Busca em outras localiza√ß√µes como fallback
    local otherLocations = {
        Workspace:FindFirstChild("Items"),
        Workspace:FindFirstChild("DragonBalls"),
        Workspace:FindFirstChild("Esferas"),
        Workspace
    }
    
    for _, location in pairs(otherLocations) do
        if location and location ~= mapFolder then
            for _, obj in pairs(location:GetDescendants()) do
                if obj:IsA("Model") and isDragonBall(obj) then
                    -- Verifica se j√° n√£o foi adicionada
                    local alreadyAdded = false
                    for _, existing in pairs(dragonBalls) do
                        if existing.Model == obj then
                            alreadyAdded = true
                            break
                        end
                    end
                    
                    if not alreadyAdded then
                        local rootPartBall = obj:FindFirstChild("HumanoidRootPart") or 
                                           obj:FindFirstChild("Head") or 
                                           obj:FindFirstChild("Torso") or 
                                           obj:FindFirstChild("Part") or
                                           obj:FindFirstChildWhichIsA("Part")
                        
                        local position
                        if rootPartBall then
                            position = rootPartBall.Position
                        else
                            position = obj:GetPivot().Position
                        end
                        
                        table.insert(dragonBalls, {
                            Model = obj,
                            RootPart = rootPartBall or obj,
                            Position = position,
                            Name = obj.Name
                        })
                    end
                end
            end
        end
    end
    
    -- Ordenar por dist√¢ncia do player
    local character = player.Character
    if character then
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            table.sort(dragonBalls, function(a, b)
                local distA = (a.Position - humanoidRootPart.Position).Magnitude
                local distB = (b.Position - humanoidRootPart.Position).Magnitude
                return distA < distB
            end)
        end
    end
    
    local count = #dragonBalls
    infoLabel.Text = "Esferas: " .. count .. " | TP: " .. currentTPIndex .. "/" .. count
    
    if count > 0 then
        print("üéØ Total de esferas encontradas: " .. count)
    end
    
    -- Criar/atualizar ESP se estiver ativo
    if IS_ESP_ACTIVE then
        for _, dragonBall in pairs(dragonBalls) do
            createDragonBallESP(dragonBall.Model)
        end
    end
    
    return count
end

-- Fun√ß√£o MELHORADA para Teleportar para a PR√ìXIMA Esfera
local function teleportToNextDragonBall()
    local character = player.Character
    if not character then
        print("‚ùå Personagem n√£o encontrado")
        return
    end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then
        print("‚ùå HumanoidRootPart n√£o encontrado")
        return
    end
    
    -- Atualizar lista de esferas
    findDragonBalls()
    
    if #dragonBalls == 0 then
        print("‚ùå Nenhuma esfera encontrada para teleportar")
        statusLabel.Text = "‚ùå NENHUMA ESFERA"
        wait(2)
        if IS_ESP_ACTIVE then
            statusLabel.Text = "üü¢ ESP ATIVADO"
        else
            statusLabel.Text = "üî¥ ESP DESLIGADO"
        end
        return
    end
    
    -- Avan√ßar para a pr√≥xima esfera (c√≠clico)
    local targetBall = dragonBalls[currentTPIndex]
    
    -- Teleportar para a esfera
    local teleportPosition = targetBall.Position + Vector3.new(0, 5, 0) -- 5 studs acima
    
    -- Usar Tween para teleporte suave
    local tweenInfo = TweenInfo.new(0.8, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = CFrame.new(teleportPosition)})
    tween:Play()
    
    print("üöÄ Teleportando para esfera " .. currentTPIndex .. "/" .. #dragonBalls .. ": " .. targetBall.Name)
    
    -- Atualizar √≠ndice para a pr√≥xima esfera
    currentTPIndex = currentTPIndex + 1
    if currentTPIndex > #dragonBalls then
        currentTPIndex = 1 -- Voltar para a primeira
    end
    
    statusLabel.Text = "üöÄ TP: " .. (currentTPIndex - 1) .. "/" .. #dragonBalls
    infoLabel.Text = "Esferas: " .. #dragonBalls .. " | TP: " .. currentTPIndex .. "/" .. #dragonBalls
    
    wait(1)
    
    if IS_ESP_ACTIVE then
        statusLabel.Text = "üü¢ ESP ATIVADO"
    else
        statusLabel.Text = "üî¥ ESP DESLIGADO"
    end
end

-- Loop do ESP
local function espLoop()
    while IS_ESP_ACTIVE do
        findDragonBalls()
        wait(3) -- Atualizar a cada 3 segundos
    end
end

-- Conectar bot√£o ESP
espButton.MouseButton1Click:Connect(function()
    IS_ESP_ACTIVE = not IS_ESP_ACTIVE
    
    if IS_ESP_ACTIVE then
        espButton.Text = "üåü DESLIGAR ESP"
        espButton.BackgroundColor3 = Color3.fromRGB(80, 180, 180)
        statusLabel.Text = "üü¢ ESP ATIVADO"
        statusLabel.TextColor3 = Color3.new(0.5, 1, 0.5)
        
        -- Encontrar e criar ESP para esferas existentes
        findDragonBalls()
        coroutine.wrap(espLoop)()
        
        print("üåü ESP das Esferas do Drag√£o ATIVADO")
        
    else
        espButton.Text = "üåü LIGAR ESP"
        espButton.BackgroundColor3 = Color3.fromRGB(180, 80, 180)
        statusLabel.Text = "üî¥ ESP DESLIGADO"
        statusLabel.TextColor3 = Color3.new(1, 0.5, 0.5)
        
        -- Limpar todos os ESPs
        clearAllESP()
        
        print("üåü ESP das Esferas do Drag√£o DESLIGADO")
    end
end)

-- Conectar bot√£o TP
tpButton.MouseButton1Click:Connect(function()
    teleportToNextDragonBall()
end)

-- Atualizar ESP quando novos objetos forem adicionados
local function onDescendantAdded(descendant)
    if IS_ESP_ACTIVE and descendant:IsA("Model") and isDragonBall(descendant) then
        wait(0.5) -- Esperar um pouco para o objeto carregar completamente
        findDragonBalls()
    end
end

-- Conectar aos eventos de descendentes adicionados
for _, location in pairs({Workspace:FindFirstChild("Map"), Workspace}) do
    if location then
        location.DescendantAdded:Connect(onDescendantAdded)
    end
end

-- Reiniciar √≠ndice quando o personagem respawnar
player.CharacterAdded:Connect(function()
    wait(2)
    currentTPIndex = 1
    findDragonBalls()
end)

-- Inicializa√ß√£o
print("üåü ESP para Esferas do Drag√£o carregado!")
print("üîç Filtro melhorado - apenas GUIDs { }")
print("üöÄ TP C√çCLICO - clique para ir para a pr√≥xima esfera")
print("üìè ESP VIS√çVEL DE LONGE - texto grande e brilho intenso")

-- Primeira busca inicial
findDragonBalls()